/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
/*!******************************************************!*\
  !*** ./resources/assets/backend/js/pages/message.js ***!
  \******************************************************/
var Message = function () {
  var moduleUrl = appUrl + '/admin/messages';
  var messageId;

  var initDatatable = function initDatatable() {
    datatable = $('#table-message').DataTable({
      bSort: false,
      ajax: {
        url: moduleUrl,
        data: function data(d) {
          return $.extend(d, searchData);
        },
        method: 'GET'
      },
      columns: [{
        data: 'DT_RowIndex',
        sClass: 'text-center'
      }, {
        data: 'subject'
      }, {
        data: 'created_at',
        sClass: 'text-center',
        render: function render(data, type, row) {
          return moment(data).format('DD/MM/YYYY');
        }
      }, {
        data: 'sender_name',
        sClass: 'text-center'
      }, {
        data: 'sender_email',
        sClass: 'text-center'
      }, {
        data: 'id',
        sClass: 'text-center',
        render: function render(data, type, row) {
          var baseUrl = moduleUrl + '/' + data;
          var attrName = ' data-name="' + row.subject + '"';
          var attrActionUrl = ' data-action-url="' + baseUrl + '"';
          var btnView = "<a href=\"".concat(baseUrl, "\" class=\"btn btn-icon tooltips\" data-title=\"\u0E14\u0E39\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\"><i class=\"fa fa-search\"></i></a>");
          var btnDel = "<a href=\"javascript:;\" ".concat(attrName, " ").concat(attrActionUrl, " class=\"btn btn-icon btn-delete tooltips\" data-title=\"\u0E25\u0E1A\"><i class=\"fa fa-trash\"></i></a>");
          var actions = btnView + btnDel;
          return actions;
        }
      }],
      columnDefs: [].concat($.fn.dataTable.defaults.columnDefs)
    }).on('draw', function () {
      app_plugins.switch_button();
      $('.tooltips').tooltip();
    });
    datatable.on('row-reorder', function (e, diff, edit) {
      var arr = [];

      for (var i = 0, ien = diff.length; i < ien; i++) {
        var rowData = datatable.row(diff[i].node).data();
        arr.push({
          id: rowData.id,
          position: diff[i].newPosition
        });
      }

      if (arr.length) {
        Loading.show();
        $.ajax({
          url: "".concat(moduleUrl, "/sequence"),
          type: 'POST',
          data: JSON.stringify(arr),
          dataType: 'json',
          success: function success(resp) {
            App.showSuccess(resp);
            datatable.draw();
            Loading.hide();
          },
          error: function error(resp) {
            Loading.hide();
          }
        });
      }
    });
  };
  /**
   * Form Section
   */


  var initFeaturedImage = function initFeaturedImage() {
    dropzone = true;
    var featuredImage = $(".featured");
    featuredImage.dropzone({
      url: "".concat(moduleUrl, "/upload-featured"),
      autoProcessQueue: false,
      uploadMultiple: false,
      maxFiles: 1,
      maxFilesize: 5048,
      dictRemoveFile: 'Remove',
      acceptedFiles: ".jpeg,.jpg,.png,.gif",
      previewTemplate: '<div id="template-preview"></div>',
      maxfilesexceeded: function maxfilesexceeded(file) {
        this.removeAllFiles();
        this.addFile(file);
      },
      headers: {
        'X-CSRF-TOKEN': token
      },
      init: function init() {
        featuredDropzone = this;
        this.on("thumbnail", function (file, dataURL) {
          if (file.accepted) {
            featuredImage.css('background-image', 'url(' + dataURL + ')');
            featuredImage.addClass('preview');
            var size = file.size / 1024;
            featuredImage.siblings('.image-info').text("".concat(file.name, " (").concat(size.toNumber(2), " kb)")).show();
          }
        });
        this.on('error', function (file, resp) {
          console.log(resp);
        });
        this.on("sending", function (file, xhr, formData) {
          formData.append("id", messageId);
        });
        this.on("queuecomplete", function (file) {
          featuredDropzone.files = [];
          App.showSuccess(httpResponse);
          var $inputs = $(form).find("input, select, button, textarea");
          $inputs.prop("disabled", false);
          Loading.hide();
          var method = $('[name="_method"]').val();

          if (method == 'post') {
            setTimeout(function () {
              window.location.href = moduleUrl;
            }, 300);
          }
        });
      }
    });
  };

  var handleSubmit = function handleSubmit() {
    $('#form-message').on('submit', function (e) {
      e.preventDefault();
      if (e.isTrigger) return false; // prevent submit twice

      form = this; // $('<input />').attr('type', 'hidden').attr('name', "content_id").attr('value', messageApp.message.link_content.content_id).appendTo($(form));
      // $('<input />').attr('type', 'hidden').attr('name', "content_type_id").attr('value', messageApp.message.link_content.content_type_id).appendTo($(form));

      var checkboxes = $(this).find("input[type=checkbox]");
      $.each(checkboxes, function (key, val) {
        $('<input />').attr('type', 'hidden').attr('name', $(val).attr('name')).attr('value', $(this).is(':checked')).appendTo($(form));
      });

      if ($(form).valid()) {
        var $inputs = $(form).find("input, select, button, textarea");
        var formData = $(form).serializeArray();
        $inputs.prop("disabled", true);
        Loading.show();
        var method = $('[name="_method"]').val();
        $.ajax({
          type: 'POST',
          url: $(form).attr('action'),
          data: formData,
          success: function success(resp) {
            httpResponse = resp;
            messageId = resp.data.id;

            if (featuredDropzone && featuredDropzone.files.length) {
              featuredDropzone.processQueue();
            } else {
              App.showSuccess(resp);
              $inputs.prop("disabled", false);
              Loading.hide();

              if (method == 'post') {
                setTimeout(function () {
                  window.location.href = moduleUrl;
                }, 300);
              }
            }
          },
          error: function error(jqXhr) {
            var errors = jqXhr.responseJSON;
            App.showFormErrors(errors, $(form));
            App.resetSubmitButton($(form));
            $inputs.prop("disabled", false);
            Loading.hide();
          }
        });
      }
    });
  };

  return {
    init: function init() {
      if ($('#table-message').length) {
        initDatatable();
      }

      if ($('#form-message').length) {
        initFeaturedImage();
        handleSubmit();
      }
    }
  };
}();

$(function () {
  Message.init();
});
/******/ })()
;