/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
/*!***********************************************************!*\
  !*** ./resources/assets/backend/js/pages/content-type.js ***!
  \***********************************************************/
var ContentType = function () {
  var moduleUrl = appUrl + '/admin/content-types';

  var initDatatable = function initDatatable() {
    datatable = $('#table-content-type').DataTable({
      rowReorder: {
        update: false
      },
      bSort: false,
      ajax: {
        url: moduleUrl,
        data: function data(d) {
          return $.extend(d, searchData);
        },
        method: 'GET'
      },
      columns: [{
        data: 'DT_RowIndex',
        sClass: 'text-center'
      }, {
        data: 'name'
      }, {
        data: 'published',
        sClass: 'text-center',
        render: function render(data, type, row) {
          var checked = data ? 'checked' : '';
          return "<label class=\"switch\"><input type=\"checkbox\" name=\"status\" data-module-url=\"".concat(moduleUrl, "\" data-id=\"").concat(row.id, "\" ").concat(checked, " /></label>");
        }
      }, {
        data: 'id',
        sClass: 'text-center',
        render: function render(data, type, row) {
          var baseUrl = moduleUrl + '/' + data;
          var attrName = ' data-name="' + row.name + '"';
          var attrActionUrl = ' data-action-url="' + baseUrl + '"';
          var btnEdit = "<a href=\"".concat(baseUrl, "/edit\" class=\"btn btn-icon tooltips btn-edit\" data-title=\"\u0E41\u0E01\u0E49\u0E44\u0E02\"><i class=\"fa fa-edit\"></i></a>");
          var btnDel = "<a href=\"javascript:;\" ".concat(attrName, " ").concat(attrActionUrl, " class=\"btn btn-icon btn-delete tooltips\" data-title=\"\u0E25\u0E1A\"><i class=\"fa fa-trash\"></i></a>");
          var actions = btnEdit + btnDel;
          return actions;
        }
      }],
      columnDefs: [].concat($.fn.dataTable.defaults.columnDefs)
    }).on('draw', function () {
      app_plugins.switch_button();
      $('.tooltips').tooltip();
    });
    datatable.on('row-reorder', function (e, diff, edit) {
      var arr = [];

      for (var i = 0, ien = diff.length; i < ien; i++) {
        var rowData = datatable.row(diff[i].node).data();
        arr.push({
          id: rowData.id,
          position: diff[i].newPosition
        });
      }

      if (arr.length) {
        Loading.show();
        $.ajax({
          url: "".concat(moduleUrl, "/sequence"),
          type: 'POST',
          data: JSON.stringify(arr),
          dataType: 'json',
          success: function success(resp) {
            App.showSuccess(resp);
            datatable.draw();
            Loading.hide();
          },
          error: function error(resp) {
            Loading.hide();
          }
        });
      }
    });
  };

  return {
    init: function init() {
      if ($('#table-content-type').length) {
        initDatatable();
      }
    }
  };
}();

$(function () {
  ContentType.init();
});
/******/ })()
;